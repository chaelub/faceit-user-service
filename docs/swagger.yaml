basePath: /
definitions:
  models.publicUser:
    properties:
      country:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      nickname:
        type: string
      password:
        type: string
    type: object
  types.Response:
    properties:
      error:
        type: string
      payload:
        type: object
      success:
        type: boolean
    type: object
  types.UserRequest:
    properties:
      country:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      nickname:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  title: FACEIT User service API
  version: "0.1"
paths:
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: New user's data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.publicUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.Response'
      summary: Register new user
  /user/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.publicUser'
      summary: Deletes whole user data
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.publicUser'
      summary: Returns User model by given ID
    put:
      consumes:
      - application/json
      parameters:
      - description: New user's data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UserRequest'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.publicUser'
      summary: Updates User model
  /user/find:
    get:
      parameters:
      - description: Email regexp template
        in: query
        name: email
        type: string
      - description: Country regexp template
        in: query
        name: country
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.publicUser'
            type: array
      summary: Returns a list of User models founded by given criteria
swagger: "2.0"
